@startuml
class Customer {
    -name: string
    -id: string
}
class Money {
    -amount: number
    +plus(amount: Money): Money
    +minus(amount: Money): Money
    +times(percent: number): Money
    +isLessThan(other: Money): boolean
    +isGreaterThanOrEqual(other: Money): boolean
    +{static} ZERO: Money
    +{static} wons(amount: number): Money
}
abstract class DiscountPolicy {
    -conditions: DiscountCondition[]
    +calculateDiscountAmount(screening: Screening): Money
    #{abstract} getDiscountAmount(Screening: Screening): Money
}
class Movie {
    -discountPolicy: DiscountPolicy
    -title: string
    -runningTime: number
    -fee: Money
    +getFee(): Money
    +setDiscountPolicy(discountPolicy: DiscountPolicy): void
    +calculateMovieFee(screening: Screening): Money
}
class Reservation {
    -customer: Customer
    -screening: Screening
    -fee: Money
    -audienceCount: number
}
class Screening {
    -movie: Movie
    -sequence: number
    -whenScreened: Date
    +getStartTime(): Date
    +isSequence(sequence: number): boolean
    +getMovieFee(): Money
    +reserve(customer: Customer, audienceCount: number): Reservation
    +calculateFee(audienceCount: number): Money
}
interface DiscountCondition {
    +isSatisfiedBy(screening: Screening): boolean
}
class AmountDiscountPolicy extends DiscountPolicy {
    -discountAmount: Money
    #getDiscountAmount(): Money
}
class NoneDiscountPolicy extends DiscountPolicy {
    #getDiscountAmount(): Money
}
class PercentDiscountPolicy extends DiscountPolicy {
    -percent: number
    #getDiscountAmount(screening: Screening): Money
}
class PeriodCondition implements DiscountCondition {
    -dayOfWeek: number
    -startTime: Date
    -endTime: Date
    +isSatisfiedBy(screening: Screening): boolean
}
class SequenceCondition implements DiscountCondition {
    -sequence: number
    +isSatisfiedBy(screening: Screening): boolean
}
DiscountPolicy *-- DiscountCondition
DiscountPolicy *-- Screening
DiscountPolicy *-- Money
Movie *-- DiscountPolicy
Movie *-- Money
Movie *-- Screening
Reservation *-- Customer
Reservation *-- Screening
Reservation *-- Money
Screening *-- Movie
Screening *-- Money
Screening *-- Customer
Screening *-- Reservation
DiscountCondition *-- Screening
AmountDiscountPolicy *-- Money
NoneDiscountPolicy *-- Money
PercentDiscountPolicy *-- Screening
PercentDiscountPolicy *-- Money
PeriodCondition *-- Screening
SequenceCondition *-- Screening

hide Money
hide Customer
hide Reservation
@enduml